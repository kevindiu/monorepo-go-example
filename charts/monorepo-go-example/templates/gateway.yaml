{{/*
Copyright (C) 2025 Kevin Diu <kevindiujp@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License");
You may not use this file except in compliance with the License.
You may obtain a copy of the License at

   https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.gateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "monorepo-go-example.labels" . | nindent 4 }}
    app: gateway
    version: v1
spec:
  replicas: {{ .Values.gateway.replicaCount }}
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
        version: v1
      annotations:
        {{- if .Values.monitoring.prometheus.enabled }}
        prometheus.io/scrape: {{ .Values.monitoring.prometheus.scrape | quote }}
        prometheus.io/port: "8080"
        prometheus.io/path: {{ .Values.monitoring.prometheus.path | quote }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "monorepo-go-example.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: gateway
        image: {{ include "monorepo-go-example.image" (dict "Values" .Values "repository" .Values.gateway.image.repository "tag" .Values.gateway.image.tag) }}
        imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: {{ .Values.gateway.service.grpcPort }}
          name: grpc
          protocol: TCP
        env:
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_PORT
          value: "8080"
        - name: SERVER_GRPC_PORT
          value: {{ .Values.gateway.service.grpcPort | quote }}
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: {{ include "monorepo-go-example.fullname" . }}-config
              key: log.level
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: {{ include "monorepo-go-example.fullname" . }}-config
              key: log.format
        - name: USER_SERVICE_ENDPOINT
          value: "user-service:{{ .Values.userService.service.grpcPort }}"
        - name: ORDER_SERVICE_ENDPOINT
          value: "order-service:{{ .Values.orderService.service.grpcPort }}"
        livenessProbe:
          {{- toYaml .Values.gateway.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.gateway.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.gateway.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "monorepo-go-example.labels" . | nindent 4 }}
    app: gateway
spec:
  type: {{ .Values.gateway.service.type }}
  ports:
  - port: {{ .Values.gateway.service.httpPort }}
    targetPort: 8080
    protocol: TCP
    name: http
  - port: {{ .Values.gateway.service.grpcPort }}
    targetPort: {{ .Values.gateway.service.grpcPort }}
    protocol: TCP
    name: grpc
  selector:
    app: gateway
{{- if .Values.gateway.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gateway-hpa
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "monorepo-go-example.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway
  minReplicas: {{ .Values.gateway.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.gateway.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.gateway.autoscaling.targetCPUUtilizationPercentage }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.gateway.autoscaling.targetMemoryUtilizationPercentage }}
{{- end }}
{{- end }}