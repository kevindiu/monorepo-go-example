name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: 1.21
  REGISTRY: ghcr.io

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: make deps

    - name: Install tools
      run: make tools

    - name: Generate protobuf code
      run: make proto

    - name: Run tests
      run: make test

    - name: Build release binaries
      run: make release

    - name: Generate changelog
      id: changelog
      run: |
        # Get previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        # Generate changelog
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" --no-merges)
        else
          CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s" --no-merges)
        fi
        
        # Save to file
        echo "$CHANGELOG" > CHANGELOG.txt
        
        # Set output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## Changes
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Docker Images
          
          ```bash
          docker pull ghcr.io/${{ github.repository }}/user-service:${{ github.ref_name }}
          docker pull ghcr.io/${{ github.repository }}/order-service:${{ github.ref_name }}
          docker pull ghcr.io/${{ github.repository }}/gateway:${{ github.ref_name }}
          ```
          
        files: |
          build/*
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-images:
    needs: create-release
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [user-service, order-service, gateway]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./deployments/docker/${{ matrix.service }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Sign container image
      run: |
        # Install cosign
        curl -sSfL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o cosign
        chmod +x cosign
        
        # Sign the image
        ./cosign sign --yes ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:${{ github.ref_name }}
      env:
        COSIGN_EXPERIMENTAL: 1

  deploy-helm:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref_name, 'rc') && !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'alpha') }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Package Helm chart
      run: |
        # Install Helm
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        
        # Package chart
        helm package charts/monorepo-go-example --version ${{ github.ref_name }}

    - name: Upload Helm chart to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          monorepo-go-example-*.tgz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
